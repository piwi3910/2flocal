// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Ensure this is set in your .env file
}

model User {
  id                    String    @id @default(cuid())
  email                 String    @unique
  passwordHash          String
  name                  String?
  isAdmin               Boolean   @default(false)
  isEmailVerified       Boolean   @default(false)
  emailVerificationToken String?
  passwordResetToken    String?
  passwordResetExpires  DateTime?
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  devices        Device[]
  accountSecrets AccountSecret[]
  refreshTokens  RefreshToken[]
}

model RefreshToken {
  id          String    @id @default(cuid())
  tokenHash   String    @unique // Store only the hash of the token for security
  expiresAt   DateTime
  isRevoked   Boolean   @default(false)
  revokedAt   DateTime?
  deviceInfo  String?   // Store device information for better tracking
  ipAddress   String?   // Store IP address for audit purposes
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([tokenHash])
}

// Define an enum for device types
enum DeviceType {
  MOBILE
  DESKTOP
  WEB
  OTHER
}

model Device {
  id         String     @id @default(cuid())
  identifier String     // Renamed from deviceId, Unique identifier for the physical device
  name       String     // User-given name for the device (e.g., "My iPhone")
  type       DeviceType // Added: Type of device
  lastSeen   DateTime   @default(now()) // Added: Last time the device was seen/used
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, identifier]) // Added: Ensure user doesn't register same device identifier twice
}

model AccountSecret {
  id              String   @id @default(cuid())
  issuer          String   // e.g., "Google", "GitHub"
  label           String   // e.g., "user@example.com", "username"
  encryptedSecret String   // The TOTP secret, encrypted
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, issuer, label]) // Ensure a user doesn't add the same account twice
}
